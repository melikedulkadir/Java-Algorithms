import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;
import java.util.Scanner;

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        // TODO: YOUR CODE HERE

            FileInputStream fileStream = new FileInputStream(filename);
            FileWriter output = new FileWriter("scanLog.txt");
            Scanner scanner = new Scanner(fileStream);    //file to be scanned
            System.out.println("Started scanning...");
            int counter = 0;
            int log_counter = 0;
            while(scanner.hasNextLine())
            {
                counter++;
                String line = scanner.nextLine(); //returns the line that was skipped
                String hash = turbo64(line);
                for (String hashCode : malwareDB.keySet()){
                    if (hash.equals(hashCode)){
                        log_counter++;
                        System.out.println("--------------------------------------------------------------------------------");
                        System.out.println("Detected malware!");
                        System.out.println("Name: "+malwareDB.get(hashCode).getTitle());
                        System.out.println("Threat Level: "+ malwareDB.get(hashCode).getLevel());
                        System.out.println("Hash:"+ hash);
                        output.write(malwareDB.get(hashCode).getHash()+ "@" +counter+ "\n");
                    }
                }
            }
        System.out.println("--------------------------------------------------------------------------------");
        System.out.printf("Scan complete! %d threats are found and eliminated. Generating log file...%n",log_counter);
        output.close();
        scanner.close();             //closes the scanner


    }

    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE

        final long MOD_TURBO = 4294967291L;
        long a = 0L;
        long b = 1L;
        for (int c = 0; c < in.length(); c++) {
            a = (a + (int) in.charAt(c)) % MOD_TURBO;
            b = (a + b) % MOD_TURBO;
        }
        return Long.toHexString((b << 32) | a);

    }
}
